trigger:
  # will build for every branch, for every commit
  - '*'
  
# describes the machine you're going to run the pipeline on
pool:
  vmImage: 'ubuntu-18.04'
  # requires this stuff to be installed on the machine
  demands:
  - npm

variables:
  buildConfiguration: 'Release'

steps:
  # predefined task in azure with scripts. any task without a script will be.
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK 3.1.300'
  # parameters to this task
  inputs:
    packageType: sdk
    version: 3.1.300

- task: Npm@1
  displayName: 'Run npm install'
  # default task for npm is 'npm install' so no inputs needed to install it manually
  inputs:
    verbose: false
  
  # bash for linux, PS for windows (host machine)
- script: './node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: Tailspin.SpaceGame.Web/wwwroot

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - Release'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration Release'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish as a build artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  condition: succeeded()